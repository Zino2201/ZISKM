"use strict";(self.webpackChunkziskm=self.webpackChunkziskm||[]).push([[584],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),c=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(u.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=c(n),d=o,y=p["".concat(u,".").concat(d)]||p[d]||m[d]||a;return n?r.createElement(y,i(i({ref:t},l),{},{components:n})):r.createElement(y,i({ref:t},l))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=p;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},1362:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return u},metadata:function(){return c},toc:function(){return l},default:function(){return p}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],s={},u="Custom Animation System",c={unversionedId:"advanced/custom-system",id:"advanced/custom-system",isDocsHomePage:!1,title:"Custom Animation System",description:"Introduction",source:"@site/docs/advanced/custom-system.md",sourceDirName:"advanced",slug:"/advanced/custom-system",permalink:"/ZISKM/advanced/custom-system",editUrl:"https://github.com/Zino2201/ZISKM/edit/main/docs/advanced/custom-system.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Animation Ticking Rate Optimization",permalink:"/ZISKM/getting-started/uro"},next:{title:"Optimization",permalink:"/ZISKM/support/optimization"}},l=[{value:"Introduction",id:"introduction",children:[]},{value:"Simple custom system",id:"simple-custom-system",children:[]},{value:"Going Further",id:"going-further",children:[{value:"<code>FZISKMInstanceManager</code>",id:"fziskminstancemanager",children:[]}]}],m={toc:l};function p(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"custom-animation-system"},"Custom Animation System"),(0,a.kt)("h2",{id:"introduction"},"Introduction"),(0,a.kt)("p",null,"Even though the plugin provides an Unreal actor component and use Unreal's native systems to provide animation, you can totally plug in your own ECS or/and animation system if required. For now, we do not provide a solution to use the animation blueprint without actor components but we have it working, it may come later \ud83d\udc40"),(0,a.kt)("h2",{id:"simple-custom-system"},"Simple custom system"),(0,a.kt)("p",null,"You may stop using Unreal's anim blueprint and use the default Play Animation and other functions to create your simple but powerful anim system."),(0,a.kt)("h2",{id:"going-further"},"Going Further"),(0,a.kt)("p",null,"If you want to go further, e.g you have your own ECS system or you have a complete animation system that you want to simply integrate with ZISKM, you will need to interact directly with ZISKM core parts. At this point, ZISKM will only act as a rendering layer and will not provide animation management or other. "),(0,a.kt)("h3",{id:"fziskminstancemanager"},(0,a.kt)("inlineCode",{parentName:"h3"},"FZISKMInstanceManager")),(0,a.kt)("p",null,"The main class you will be interacting with is ",(0,a.kt)("inlineCode",{parentName:"p"},"FZISKMInstanceManager"),", it is the class responsible for managing all instances and feeding the correct data to the renderer. This class can then be used to spawn a proxy (see ",(0,a.kt)("inlineCode",{parentName:"p"},"FZISKMInstancedSkeletalMeshProxy"),") to render the instances. "),(0,a.kt)("p",null,"It provides:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Render thread instance management"),(0,a.kt)("li",{parentName:"ul"},"Frustum culling"),(0,a.kt)("li",{parentName:"ul"},"LOD management")),(0,a.kt)("p",null,"As a reference, you can see how we implemented this class with ",(0,a.kt)("inlineCode",{parentName:"p"},"UZISKMInstancedSkeletalMeshComponent"),", which is just a wrapper around ",(0,a.kt)("inlineCode",{parentName:"p"},"USkeletalMeshComponent")," that feeds its bone data to ",(0,a.kt)("inlineCode",{parentName:"p"},"FZISKMInstanceManager")," through a world subsystem."))}p.isMDXComponent=!0}}]);